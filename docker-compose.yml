version: "3.4"

services:
  vcc.client:
    image: vcc.client:alpine
    # depends_on:
    #   - db
    build:
      context: .
      dockerfile: docker/Dockerfile.client.alpine
    tty: true
    stdin_open: true
    working_dir: /usr/src/app
    env_file:
      - "docker.env"
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
    volumes:
      - ./client:/usr/src/app
      - notused:/usr/src/app/node_modules
    networks:
      - vccnet
    # command: webpack-dev-server
    command: vite
    entrypoint: /usr/local/bin/docker-entrypoint-client-a.sh

  # kanban.server:
  #   image: kanban.server:alpine
  #   depends_on:
  #     - db
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile.server.alpine
  #   tty: true
  #   stdin_open: true
  #   working_dir: /usr/src/app
  #   env_file:
  #     - "docker.env"
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 4000:4000
  #     - 5000:5000
  #   volumes:
  #     - ./server:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - kanbannet
  #   command: yarn start:graph
  #   # entrypoint: /usr/src/app/docker-entrypoint.sh

  # # https://gist.github.com/onjin/2dd3cc52ef79069de1faa2dfd456c945
  # db:
  #   image: postgres:12
  #   # restart: always
  #   restart: unless-stopped
  #   # file must end in .sql not .psql
  #   volumes:
  #     - ./sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
  #     - ./sql/seed_data.sql:/docker-entrypoint-initdb.d/seed_data.sql:ro
  #     - ./postgres-data:/var/lib/postgresql/data:Z
  #   env_file:
  #     - "docker.env"
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - kanbannet

networks:
  vccnet:

volumes:
  notused:
  # postgres-data:
