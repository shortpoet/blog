version: "3.5"

networks:
  vccnet:
    name: ${COMPOSE_PROJECT_NAME}net
    # driver: bridge

volumes:
  notused:
  postgres-data:

services:

  vcc.client:
    image: ${COMPOSE_PROJECT_NAME}.client:alpine
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker/Dockerfile.client.alpine
    tty: true
    stdin_open: true
    working_dir: /usr/src/app
    env_file:
      - ".env"
    environment:
      NODE_ENV: production
    ports:
      - 8080:8080
    volumes:
      - ./client:/usr/src/app
      - notused:/usr/src/app/node_modules
    networks:
      - ${COMPOSE_PROJECT_NAME}net
    command: vite

  vcc.server:
    image: ${COMPOSE_PROJECT_NAME}.server:alpine
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker/Dockerfile.server.alpine
    tty: true
    stdin_open: true
    working_dir: /usr/src/app
    env_file:
      - ".env"
    ports:
      - 5000:5000
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - ${COMPOSE_PROJECT_NAME}net
    command: ["docker-entrypoint-server-a.sh", "${POSTGRES_HOST}", "yarn", "start"]
    # entrypoint: /usr/local/bin/docker-entrypoint-server-a.sh

  db:
    image: postgres:12
    restart: unless-stopped
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d/:ro
      - ./db/data/postgres-data:/var/lib/postgresql/data:Z
    env_file:
      - ".env"
    ports:
      - 5432:5432
    networks:
      - ${COMPOSE_PROJECT_NAME}net
